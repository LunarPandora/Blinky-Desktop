//  Step #0
//  Include semua library yang akan digunakan.
#include <UrlEncode.h>

#include <SPI.h>
#include <MFRC522.h>

#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <ESP8266WebServer.h>
#include <WiFiClient.h>

//  Step #1
//  Define semua pin yang digunakan
#define RST_PIN D3 // Pin untuk mereset MFRC522
#define SDA_PIN D4 // Pin untuk mengambil data dari MFRC522

#define LED_MERAH D1 // Pin lampu LED merah
#define LED_HIJAU D0 // Pin lampu LED hijau

#define BUZZ D2 // Pin Buzzer

//  Step #2
//  Masukkan SSID dan Password
const char* ssid = "RFID1";
const char* password = "rfid1234";

//  Step #3
//  Siapkan class yang akan digunakan untuk mengakses
//  Board, server dan sensor
ESP8266WebServer server(80);
MFRC522 mfrc522(SDA_PIN, RST_PIN);
WiFiClient client;
HTTPClient http;

void setup() {
  //  Mulai terima output serial di serial monitor -> 115200 baud
  Serial.begin(115200);

  //  Step #4
  //  Siapkan Access Point NodeMCU dengan SSID dan Password AP
  //  yang sudah kita siapkan di awal
  Serial.println("Setting AP (Access Point)â€¦");
  WiFi.softAP(ssid, password);
  delay(100);

  //  Step #5 (opsional)
  //  Tampilkan IP dari WiFi AP kita
  IPAddress IP = WiFi.softAPIP();
  Serial.println("AP IP address: ");
  Serial.println(IP);

  //  Step #6
  //  Atur LED ke mode output dan pastikan 2 LED dalam
  //  keadaan mati atau LOW  
  pinMode(LED_MERAH, OUTPUT);
  pinMode(LED_HIJAU, OUTPUT);

  digitalWrite(LED_MERAH, LOW);
  digitalWrite(LED_HIJAU, LOW);

  //  Step #7
  //  Siapkan rute web server yang dapat digunakan
  //  untuk mengecek apakah web server terkoneksi
  //  (Silahkan tambah rute lain jika diperlukan)
  //
  //  === Cara kerja ===
  //
  //  .on menerima 2 parameter, yaitu URL dan handler (function)
  //  Contoh : server.on("/home", halamanHome)
  //  Hasil : Jika client membuka halaman "/home", maka akan tampil
  //          halaman home. 
  server.on("/", handleRoot);

  //  Step #8
  //  Jalankan layanan HTTP Server
  server.begin();
  Serial.println("HTTP server started");

  //  Step #9
  //  Jalankan proses scanner dan inisialisasi
  //  Sensor MFRC522
  SPI.begin();
  mfrc522.PCD_Init();
  Serial.println("Put your card to the reader...");
}

void loop() {
  //  Step #10
  //  Selama board berjalan, server terus menerus
  //  Menerima koneksi dari client
  server.handleClient();

  //  Step #11
  //  Selama tidak ada kartu yang terscan
  //  Maka kembali ke step #10
  if(!mfrc522.PICC_IsNewCardPresent()){
    return;
  }

  if(!mfrc522.PICC_ReadCardSerial()){
    return;
  }

  //  Step #12
  //  Jika ada kartu yang terscan, maka ambil
  //  UID tag dari kartu RFID
  Serial.print("UID tag : ");
  String content = "";
  byte letter;

  for(byte i = 0; i < mfrc522.uid.size; i++){
    Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
    Serial.print(mfrc522.uid.uidByte[i], HEX);
    content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
    content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }

  content.toUpperCase();
  String uid = content.substring(1);

  //  Step #13
  //  Siapkan URL dan data yang akan dikirim
  //  ke web server localhost (XAMPP)
  String getData = "mode=check&uid=" + urlEncode(uid) ;
  String Link = "http://192.168.4.2/RFID/main.php?" + getData;

  Serial.println("\n" + Link);
  
  //  Step #14
  //  Kirimkan request ke server
  http.begin(client, Link.c_str());
  int httpCode = http.GET(); 
  
  //  Step #15
  //  Ambil response code dan payload
  String payload = http.getString(); 

  //  Step #16
  //  Cetak kode response HTTP
  //  dan payload, setelah itu tutup koneksi HTTP
  Serial.println(httpCode);
  Serial.println(payload);
  http.end();

  //  Step #17
  //  Cek payload, jika success maka nyalakan LED hijau
  //  jika tidak, maka nyalakan LED merah
  if(payload == "SUCCESS"){
    digitalWrite(LED_MERAH, LOW);
    digitalWrite(LED_HIJAU, HIGH);

    tone(BUZZ, 587, 100);
    tone(BUZZ, 880, 300);

    Serial.println("Kartu cocok");
    Serial.println(content);
    delay(2000);

    digitalWrite(LED_HIJAU, LOW);
  }
  else if(payload == "ERROR_DOSEN_NOT_FOUND"){
    digitalWrite(LED_MERAH, HIGH);
    digitalWrite(LED_HIJAU, LOW);

    tone(BUZZ, 587, 300);

    Serial.println("Kartu Tidak cocok");
    delay(2000);

    digitalWrite(LED_MERAH, LOW);
  }

  //  Step #18
  //  Berikan delay untuk memproses data
  delay(3000);
}


//  Step #19
//  Buat sebuah function untuk mengembalikan
//  request dari browser yang membuka route.
void handleRoot(){
  server.send(200, "text/html", "<h1>You are connected</h1>");
}